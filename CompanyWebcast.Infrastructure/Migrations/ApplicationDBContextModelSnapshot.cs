// <auto-generated />
using System;
using CompanyWebcast.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyWebcast.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CompanyWebcast.Domain.WeatherForecast.WeatherForecast", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts", (string)null);
                });

            modelBuilder.Entity("CompanyWebcast.Domain.WeatherForecast.WeatherForecast", b =>
                {
                    b.OwnsMany("CompanyWebcast.Domain.WeatherForecast.Entities.WeatherForecastHourly", "HourlyForecasts", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("char(36)")
                                .HasColumnName("WeatherForecastHourlyId");

                            b1.Property<Guid>("WeatherForecastId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("EndHour")
                                .HasColumnType("int");

                            b1.Property<int>("StartHour")
                                .HasColumnType("int");

                            b1.Property<double>("TemperatureC")
                                .HasColumnType("double");

                            b1.HasKey("Id", "WeatherForecastId");

                            b1.HasIndex("WeatherForecastId", "StartHour", "EndHour")
                                .IsUnique();

                            b1.ToTable("WeatherForecastHourly", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("WeatherForecastId");
                        });

                    b.Navigation("HourlyForecasts");
                });
#pragma warning restore 612, 618
        }
    }
}
